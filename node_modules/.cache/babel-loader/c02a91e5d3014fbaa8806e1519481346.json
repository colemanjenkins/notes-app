{"ast":null,"code":"var _jsxFileName = \"/Users/colemanjenkins/OneDrive/UVA/Launch/notes-app/notes-app/src/Notes.js\";\n\n/*\nNow, unused file, here for reference\n*/\nimport React, { Component } from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card'; // import CardActions from '@material-ui/core/CardActions';\n\nimport CardContent from '@material-ui/core/CardContent'; // import Button from '@material-ui/core/Button';\n\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport './Notes.css';\n\nclass Notes extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.timeStamp = time => {\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      let output = '';\n      let date = new Date(time); //format: Month ##day, ####year at hour:min\n\n      output += months[date.getMonth()] + ' ';\n      output += date.getDate() + ', ';\n      output += date.getFullYear() + ' at ';\n      let hours = date.getHours();\n      let amOrPm = \"AM\";\n\n      if (hours > 12 && hours < 24) {\n        hours -= 12;\n        amOrPm = \"PM\";\n      } else if (hours === 24) {\n        hours = 12;\n        amOrPm = \"AM\";\n      }\n\n      output += hours + ':';\n      let minutes = date.getMinutes();\n      let minOutput = '' + minutes;\n      if (minutes < 10) minOutput = \"0\" + minutes;\n      output += minOutput + \" \" + amOrPm;\n      return output;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, this.props.notes.map(note => {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"root\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"root\",\n        style: {\n          border: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: \"right\",\n          color: \"gray\",\n          fontSize: \"13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, \"Created \", this.timeStamp(note.time), /*#__PURE__*/React.createElement(Button, {\n        className: \"button\",\n        onClick: () => this.props.deleteNote(note),\n        style: {\n          textTransform: \"none\",\n          margin: \"0px\",\n          marginBottom: \"4px\",\n          border: \"0px\",\n          padding: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        className: \"button\",\n        style: {\n          color: \"gray\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(Typography, {\n        className: \"title\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(InputBase, {\n        className: \"title\",\n        defaultValue: note.title,\n        inputProps: {\n          'aria-label': 'naked'\n        },\n        style: {\n          fontSize: \"20px\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Typography, {\n        className: \"noteBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(InputBase, {\n        defaultValue: note.content,\n        inputProps: {\n          'aria-label': 'naked'\n        },\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }))));\n    }));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["/Users/colemanjenkins/OneDrive/UVA/Launch/notes-app/notes-app/src/Notes.js"],"names":["React","Component","Card","CardContent","Typography","InputBase","CloseIcon","Button","Notes","timeStamp","time","months","output","date","Date","getMonth","getDate","getFullYear","hours","getHours","amOrPm","minutes","getMinutes","minOutput","render","props","notes","map","note","border","float","color","fontSize","deleteNote","textTransform","margin","marginBottom","padding","title","content"],"mappings":"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","sourcesContent":["/*\nNow, unused file, here for reference\n*/\n\n\nimport React, { Component } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport './Notes.css';\n\n\nclass Notes extends Component {\n    timeStamp = (time) => {\n        let months = [\"January\", \"February\", \"March\",\n            \"April\", \"May\", \"June\", \"July\", \"August\", \"September\",\n            \"October\", \"November\", \"December\"];\n\n        let output = '';\n        let date = new Date(time);\n\n        //format: Month ##day, ####year at hour:min\n\n        output += months[date.getMonth()] + ' ';\n        output += date.getDate() + ', ';\n        output += date.getFullYear() + ' at ';\n\n        let hours = date.getHours();\n        let amOrPm = \"AM\"\n        if (hours > 12 && hours < 24) {\n            hours -= 12;\n            amOrPm = \"PM\";\n        } else if (hours === 24) {\n            hours = 12\n            amOrPm = \"AM\"\n        }\n        output += hours + ':';\n\n        let minutes = date.getMinutes();\n        let minOutput = '' + minutes;\n        if (minutes < 10)\n            minOutput = \"0\" + minutes;\n\n        output += minOutput + \" \" + amOrPm;\n\n        return output;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.notes.map(note => {\n                    return (\n                        <Card className='root'>\n                            <CardContent className='root' style={{ border: \"20px\" }}>\n\n                                <div style={{ float: \"right\", color: \"gray\", fontSize: \"13px\" }} >\n                                    Created {this.timeStamp(note.time)}\n                                    <Button className=\"button\" onClick={() => this.props.deleteNote(note)}\n                                        style={{\n                                            textTransform: \"none\", margin: \"0px\", marginBottom: \"4px\", border: \"0px\",\n                                            padding: \"0px\"\n                                        }}>\n                                        <CloseIcon className=\"button\" style={{ color: \"gray\", }} />\n                                    </Button>\n                                </div>\n\n                                <Typography className='title' gutterBottom>\n                                    <InputBase\n                                        className='title'\n                                        defaultValue={note.title}\n                                        inputProps={{ 'aria-label': 'naked' }}\n                                        style={{ fontSize: \"20px\", color: \"black\" }}\n                                    />\n                                </Typography>\n                                <Typography className=\"noteBody\">\n                                    <InputBase\n                                        defaultValue={note.content}\n                                        inputProps={{ 'aria-label': 'naked' }}\n                                        multiline\n                                    />\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    );\n                })\n                }\n            </div>\n        );\n    }\n}\n\nexport default Notes"]},"metadata":{},"sourceType":"module"}