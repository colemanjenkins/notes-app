{"ast":null,"code":"var _jsxFileName = \"/Users/colemanjenkins/OneDrive/UVA/Launch/notes-app/notes-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Title from './Title.js'; // import NoteView from './NoteView.js';\n\nimport Note from './Note.js';\nimport CreateNote from './CreateNote.js';\nimport './App.css'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card'; // import CardActions from '@material-ui/core/CardActions';\n\nimport CardContent from '@material-ui/core/CardContent'; // import Button from '@material-ui/core/Button';\n\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport DeleteNote from './DeleteNote.js';\nimport { isEqual } from \"lodash\";\nimport './Note.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.timeStamp = () => {\n      let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      let output = '';\n      let date = new Date(Date.now()); //format: Month ##day, ####year at hour:min\n\n      output += months[date.getMonth()] + ' ';\n      output += date.getDate() + ', ';\n      output += date.getFullYear() + ' at ';\n      let hours = date.getHours();\n      let amOrPm = \"AM\";\n\n      if (hours > 12 && hours < 24) {\n        hours -= 12;\n        amOrPm = \"PM\";\n      } else if (hours === 24) {\n        hours = 12;\n        amOrPm = \"AM\";\n      }\n\n      output += hours + ':';\n      let minutes = date.getMinutes();\n      let minOutput = '' + minutes;\n      if (minutes < 10) minOutput = \"0\" + minutes;\n      output += minOutput + \" \" + amOrPm; // //temp\n      // output += ' ' + date.getSeconds();\n\n      return output;\n    };\n\n    this.createNewNote = () => {\n      const newNote = {\n        title: \"Note \" + (this.state.notes.length + 1),\n        content: \"Enter note here\",\n        time: this.timeStamp()\n      };\n      this.setState(prevState => {\n        return {\n          notes: [...prevState.notes, newNote]\n        };\n      });\n    };\n\n    this.deleteNote = delNote => {\n      const newNotes = this.state.notes.filter(note => delNote !== note);\n      this.setState(prevState => {\n        return {\n          notes: newNotes\n        };\n      });\n    };\n\n    this.equals = (note1, note2) => {\n      if (note1.title !== note2.title) return false;else if (note1.content !== note2.content) return false;else if (note1.time !== note2.time) return false;\n      return true;\n    };\n\n    this.state = {\n      notes: [{\n        title: \"Note 1\",\n        content: \"Enter note here\",\n        time: this.timeStamp()\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CreateNote, {\n      buttonPass: this.createNewNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, this.state.notes.map(note => {\n      /* {defaultNotes.map(note => { */\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"root\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"root\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: \"right\",\n          color: \"gray\",\n          fontSize: \"13px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, \"Created \", note.time, /*#__PURE__*/React.createElement(Button, {\n        className: \"button\",\n        onClick: () => this.deleteNote(note),\n        style: {\n          textTransform: \"none\",\n          marginBottom: \"4px\",\n          border: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        className: \"button\",\n        style: {\n          color: \"gray\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(Typography, {\n        className: \"title\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(InputBase, {\n        className: \"title\",\n        defaultValue: note.title,\n        inputProps: {\n          'aria-label': 'naked'\n        },\n        style: {\n          fontSize: \"20px\",\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Typography, {\n        className: \"noteBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(InputBase, {\n        defaultValue: note.content,\n        inputProps: {\n          'aria-label': 'naked'\n        },\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      })))) // <Note title={note.title} content={note.content} \n      // className=\"note\" time={note.time} \n      // deleteNote={this.deleteNote(note)} />\n      ;\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/colemanjenkins/OneDrive/UVA/Launch/notes-app/notes-app/src/App.js"],"names":["React","Component","Title","Note","CreateNote","Card","CardContent","Typography","InputBase","CloseIcon","Button","DeleteNote","isEqual","App","constructor","props","timeStamp","months","output","date","Date","now","getMonth","getDate","getFullYear","hours","getHours","amOrPm","minutes","getMinutes","minOutput","createNewNote","newNote","title","state","notes","length","content","time","setState","prevState","deleteNote","delNote","newNotes","filter","note","equals","note1","note2","render","map","float","color","fontSize","textTransform","marginBottom","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Title from './Title.js';\n// import NoteView from './NoteView.js';\nimport Note from './Note.js';\nimport CreateNote from './CreateNote.js';\nimport './App.css';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport DeleteNote from './DeleteNote.js'\nimport { isEqual } from \"lodash\";\nimport './Note.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [\n        {\n          title: \"Note 1\",\n          content: \"Enter note here\",\n          time: this.timeStamp()\n        }]\n    };\n  }\n\n  timeStamp = () => {\n    let months = [\"January\", \"February\", \"March\",\n      \"April\", \"May\", \"June\", \"July\", \"August\", \"September\",\n      \"October\", \"November\", \"December\"];\n\n    let output = '';\n    let date = new Date(Date.now());\n    //format: Month ##day, ####year at hour:min\n\n    output += months[date.getMonth()] + ' ';\n    output += date.getDate() + ', ';\n    output += date.getFullYear() + ' at ';\n\n    let hours = date.getHours();\n    let amOrPm = \"AM\"\n    if (hours > 12 && hours < 24) {\n      hours -= 12;\n      amOrPm = \"PM\";\n    } else if (hours === 24) {\n      hours = 12\n      amOrPm = \"AM\"\n    }\n    output += hours + ':';\n\n    let minutes = date.getMinutes();\n    let minOutput = '' + minutes;\n    if (minutes < 10)\n      minOutput = \"0\" + minutes;\n\n    output += minOutput + \" \" + amOrPm;\n\n    // //temp\n    // output += ' ' + date.getSeconds();\n\n    return output;\n  }\n\n  createNewNote = () => {\n    const newNote = {\n      title: \"Note \" + (this.state.notes.length + 1),\n      content: \"Enter note here\",\n      time: this.timeStamp()\n    };\n    this.setState(prevState => {\n      return {\n        notes: [...prevState.notes, newNote]\n      };\n    });\n  };\n\n  deleteNote = delNote => {\n    const newNotes = this.state.notes.filter(\n      note => delNote !== note\n    );\n    this.setState(prevState => {\n      return { notes: newNotes }\n    });\n  }\n\n  equals = (note1, note2) => {\n    if (note1.title !== note2.title)\n      return false;\n    else if (note1.content !== note2.content)\n      return false;\n    else if (note1.time !== note2.time)\n      return false;\n    return true;\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Title />\n        <div className=\"create\">\n          <CreateNote buttonPass={this.createNewNote} />\n        </div>\n        <div className=\"notes\">\n          {this.state.notes.map(note => {\n            /* {defaultNotes.map(note => { */\n            return (\n              <Card className='root'>\n                <CardContent className=\"root\">\n                  {/* <div style={{ float: \"right\", color: \"red\", fontSize: \"13px\" }}>\n                        Delete\n                    </div> */}\n\n                  <div style={{ float: \"right\", color: \"gray\", fontSize: \"13px\" }} >\n                    Created {note.time}\n                    <Button className=\"button\" onClick={() => this.deleteNote(note)}\n                      style={{ textTransform: \"none\", marginBottom: \"4px\", border: \"0px\" }}>\n                      <CloseIcon className=\"button\" style={{ color: \"gray\", }} />\n                    </Button>\n                  </div>\n\n                  <Typography className='title' gutterBottom>\n                    <InputBase\n                      className='title'\n                      defaultValue={note.title}\n                      inputProps={{ 'aria-label': 'naked' }}\n                      style={{ fontSize: \"20px\", color: \"black\" }}\n                    />\n                  </Typography>\n                  <Typography className=\"noteBody\">\n                    <InputBase\n                      defaultValue={note.content}\n                      inputProps={{ 'aria-label': 'naked' }}\n                      multiline\n                    />\n                  </Typography>\n                </CardContent>\n              </Card>\n\n              // <Note title={note.title} content={note.content} \n              // className=\"note\" time={note.time} \n              // deleteNote={this.deleteNote(note)} />\n            );\n          })}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}